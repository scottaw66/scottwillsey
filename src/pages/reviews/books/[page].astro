---
import { getEntry, render } from "astro:content";
import Base from "../../../layouts/Base.astro";
import { modifieddate } from "../../../components/utilities/DateFormat.js";
import CalendarFillIcon from "../../../components/icons/CalendarFillIcon.astro";
import Pagination from "@philnash/astro-pagination";
import { Image } from "astro:assets";
import booksList from "../../../data/reviews/books.json";
import site from "../../../data/site.json";

const books = await getEntry("books", "books");

export async function getStaticPaths({ paginate }) {
  let bookList = Array.from(booksList).sort((a, b) =>
    a.alttext.localeCompare(b.alttext),
  );
  return paginate(bookList, {
    pageSize: site.reviews.paginationSize,
  });
}
const { page } = Astro.props;

let title = books.data.title;
let description = books.data.description;
---

<Base title={title} description={description}>
  <article>
    <h1>{title}</h1>
    <p class="now">{books.data.description}</p>
    <div class="time">
      <CalendarFillIcon />
      <time datetime={books.data.date}>
        <a href={`/${books.id}`}>Last updated {modifieddate(books.data.date)}</a
        >
      </time>
    </div>
    <div class="now">
      <p>
        {
          page.data.map((book) => (
            <a href={`/images/posts/${book.review}.jpg`}>
              <Image
                src={import(`../../../assets/images/posts/${book.review}.png`)}
                alt={`${book.alttext}`}
              />
            </a>
          ))
        }
      </p>
    </div>
    {
      page.lastPage > 1 && (
        <Pagination
          page={page}
          urlPattern="/reviews/books/{}"
          firstPageUrl="/reviews/books/1"
        />
      )
    }
  </article>
</Base>

<style>
  h4 {
    font-style: italic;
  }
  div.time,
  div.time a {
    font-size: 0.8em;
  }
  div.time {
    margin-top: 2.5rem;
  }
</style>
